# WebSocket サーバー仕様書

## 概要
本仕様書は、WebSocket サーバーの機能および動作仕様について記述する。

## サーバー情報
-　エントリーポイント: `ws://localhost:5000/ws/`
- 最大接続数: `100`
- メッセージ頻度制限: `1分間に30メッセージまで`
- BAN機能: `異常な送信を検出した場合、5分間接続禁止`
- ハートビート機能: `ping による接続確認`

## 機能詳細

### 1. クライアント接続制御
- WebSocket クライアントが接続を確立すると、IP アドレスを取得し、接続制限を確認する。
- 最大接続数 (`MAX_CONNECTIONS = 100`) を超えた場合、新規接続を拒否。
- BAN されている IP は、`bannedUntil` の時間が経過するまで接続を拒否。
- クライアントごとの情報を `clients` マップに保存。

### 2. メッセージ送信制限
- 1 分間に `30` メッセージを超えると、警告メッセージを送信。
- 1 分間に `60` メッセージを超えた場合、クライアントを `5分間 BAN` し、接続を強制終了。
- メッセージの送信処理にエラーハンドリングを実装。

### 3. メッセージ送受信
- クライアントからメッセージを受信すると、全クライアントにブロードキャスト。
- `WebSocket.OPEN` の状態であるクライアントにのみメッセージを送信。
- メッセージの送信時に `try-catch` を用いたエラーハンドリングを実施。

### 4. ハートビート機能
- 60秒ごとに `ping` を送信し、クライアントの `pong` 応答を確認。
- `pong` 応答がない場合、そのクライアントを切断。
- `clients` に保存されているメッセージカウントをリセット。

### 5. クライアント切断処理
- クライアントが切断した場合、ログを出力し、`clients` から削除。
- `error` イベント発生時、適切なエラーハンドリングを実施。

## イベント一覧

| イベント名  | 説明 |
|------------|------------------------------------------------|
| connection | クライアントが WebSocket サーバーに接続した際に発火 |
| message    | クライアントがメッセージを送信した際に発火 |
| close      | クライアントが切断した際に発火 |
| error      | WebSocket 接続にエラーが発生した際に発火 |
| ping       | サーバーがクライアントの接続確認を行う際に発火 |
| pong       | クライアントが `ping` に応答した際に発火 |

## エラーハンドリング
- 接続拒否 (`1001`): `サーバーが満員です`
- BAN通知 (`1008`): `このIPは一時的に接続禁止です`
- 異常な送信 (`1008`): `異常な送信が検出されたため、接続が制限されました`
- 送信エラー: `メッセージ送信エラー` をログに記録
- 未応答クライアント: `応答なしクライアントを切断` し、`terminate()` 実行

## まとめ
本WebSocket サーバーは、スパム対策、接続制限、エラーハンドリングを強化した堅牢な設計になっている。
DDoS対策としてのメッセージ制限やBAN機能も実装済みであり、安全に運用可能である。
